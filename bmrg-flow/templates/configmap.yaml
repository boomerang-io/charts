{{- $platform := "bmrg" -}}
{{- $product := "flow" -}}
{{- $tier := "config" -}}
{{- $values := .Values -}}
{{- $context := . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "bmrg.name" (dict "context" $context "tier" $tier ) }}
  labels:
    {{- include "bmrg.labels.chart" (dict "context" $context "tier" $tier ) | nindent 4 }}
data:
  application.properties: |
    server.port=8080
    spring.data.mongodb.uri=mongodb://{{ $.Values.global.database.mongodb.user }}:${MONGODB_PASSWORD}@{{ $.Values.global.database.mongodb.host }}{{ if $.Values.global.database.mongodb.port }}:{{ $.Values.global.database.mongodb.port }}{{ end }}/{{ $.Values.global.database.mongodb.database }}{{ if $.Values.global.database.mongodb.args }}?{{ $.Values.global.database.mongodb.args }}{{ end }}
    flow.mongo.collection.prefix={{ default "bmrg-flow" $.Values.general.namePrefix | trimPrefix "bmrg-" | replace "-" "_" }}_
    org.jobrunr.database.database-name={{ $.Values.global.database.mongodb.database }}
    flow.apps.flow.url=https://{{ $.Values.global.ingress.host }}{{- default "" $.Values.global.ingress.root }}/apps/flow
    {{- range $k, $v := $values.services }}
    flow.{{ $k }}.service.host={{- include "bmrg.name" (dict "context" $context "tier" "services" "component" $k ) }}
    {{- end }}
    flow.broadcast.host={{- include "bmrg.name" (dict "context" $context "tier" "services" "component" "workflow" ) }}-broadcast.{{ .Release.Namespace }}.svc.cluster.local
    flow.api.root={{ if $.Values.global.ingress.root }}{{ $.Values.global.ingress.root }}{{ end }}/api/v2
    {{- include "bmrg.core.services" $ | indent 4 }}
    flow.events.sink.urls={{ $values.eventing.sinkURLs }}
    flow.events.sink.enabled={{ $values.eventing.enabled }}
    {{- if $.Values.general.enable.debug }}
    logging.level.org.springframework.web.client.RestTemplate=DEBUG
    logging.level.org.springframework.core.env.PropertySourcesPropertyResolver=DEBUG
    logging.level.root=INFO
    logging.level.io.boomerang.extensions=DEBUG
    logging.level.io.boomerang.service=DEBUG
    {{- end }}
    agent.tasks.logging.type={{ $values.tasks.logging.type }}
    agent.tasks.logging.host={{ $values.tasks.logging.host }}
    agent.tasks.logging.port={{ $values.tasks.logging.port }}
    agent.tasks.logging.keystore.name=/etc/secrets/logstash-elasticsearch-keystore.jks
    agent.tasks.logging.keystore.password=changeme
    agent.tasks.hostaliases={{ $.Values.hostAliases | toJson }}
    agent.tasks.serviceaccount={{- if $values.tasks.security.enable }}{{ $platform }}-{{ $product }}-worker{{ end }}
    agent.tasks.nodeselector={{ $values.tasks.nodeSelector | toJson }}
    agent.tasks.tolerations={{ $values.tasks.tolerations | toJson }}
    flow.environment={{ .Release.Namespace }}
    flow.instance={{ .Release.Name }}
    flow.product={{ $.Values.general.namePrefix }}
    flow.version={{ .Chart.AppVersion }}
    flow.otc=${FLOW_OTC}
    flow.authorization.basic.password=coronet-cottage-nave-idiom-resume
    flow.signOutUrl={{ $.Values.global.auth.prefix }}/sign_out{{ if $.Values.global.auth.signOutRedirect }}?rd={{ $.Values.global.auth.signOutRedirect }}{{ end }}
    flow.baseUrl=https://{{ $.Values.global.ingress.host }}
    flow.audit.enabled=true
    swagger.enable={{ $.Values.general.enable.apidocs }}
    proxy.enable={{ $.Values.proxy.enable }}
    {{- if $.Values.proxy.enable }}
    proxy.host={{ $.Values.proxy.host }}
    proxy.port={{ $.Values.proxy.port }}
    proxy.ignore={{ $.Values.proxy.ignore }}
    {{- end }}
    opentracing.jaeger.enabled={{ $.Values.monitoring.jaeger.enabled }}
    opentracing.jaeger.udp-sender.host={{ $.Values.monitoring.jaeger.agent.host }}.{{ $.Values.monitoring.jaeger.namespace }}
    opentracing.jaeger.udp-sender.port={{ $.Values.monitoring.jaeger.agent.port }}
    opentracing.jaeger.http-sender.url=http://{{ $.Values.monitoring.jaeger.collector.host }}.{{ $.Values.monitoring.jaeger.namespace }}:{{ $.Values.monitoring.jaeger.collector.port }}/api/traces
    opentracing.jaeger.remote-controlled-sampler.host-port={{ $.Values.monitoring.jaeger.remoteControlledSampler.host }}.{{ $.Values.monitoring.jaeger.namespace }}:{{ $.Values.monitoring.jaeger.remoteControlledSampler.port }}
    flow.externalUrl.team={{$values.general.externalUrl.teams }}
    flow.externalUrl.user={{$values.general.externalUrl.users }}
    flow.externalUrl.navigation={{$values.general.externalUrl.navigation }}
    flow.externalUrl.platformNavigation={{$values.general.externalUrl.headerNavigation }}
    {{- if (.Values.extraConfig).services }}    
    {{ .Values.extraConfig.services | indent 4 }}
    {{- end }}