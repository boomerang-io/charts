# Default values for bmrg-apps.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# General Configuration
general:
  namePrefix: bmrg-flow
  enable:
    apidocs: false
    debug: false
  externalUrl:
    teams:
    users:
    navigation:
    headerNavigation:

tasks:
  security:
    enable: true
    policy: ibm-privileged-psp
  logging:
    type: default
    host:
    port:
    secret:
  nodeSelector:
    #node-role.boomerang.io/tasks: true
  tolerations:
  # - key: dedicated
  #   value: tasks
  #   operator: Equal
  #   effect: NoSchedule

core:
  namePrefix: bmrg-core
  ingressRoot: ""

# General Image Configuration
image:
  registry: boomerangio
  pullPolicy: IfNotPresent
  pullSecret:

# Job Configuraiton
job:
  data:
    enabled: true
    profile: flow
    image:
      repository: /flow-loader
      tag: 1.0.0-beta.21

# App Configuration
apps:
  flow:
    image:
      repository: /flow-client-web
      tag: 3.9.12
    replicaCount: 1
    service:
      type: ClusterIP
    zone: untrusted
    resources:
      requests:
        memory: "64Mi"

# Micro Service Configuration
# Note: There are if conditions in the template referencing the service name i.e. urbancode
services:
  agent:
    image:
      repository: /flow-service-agent
      tag: 1.0.0-beta.1
    replicaCount: 1
    service:
      type: ClusterIP
    serviceAccount: null
    zone: semi-trusted
    resources:
      requests:
        memory: "256Mi"
  engine:
    image:
      repository: /flow-service-engine
      tag: 1.0.0-beta.18
    replicaCount: 1
    service:
      type: ClusterIP
    zone: semi-trusted
    resources:
      requests:
        memory: "512Mi"
  workflow:
    image:
      repository: /flow-service-workflow
      tag: 4.0.0-beta.2
    replicaCount: 1
    service:
      type: ClusterIP
    zone: untrusted
    resources:
      requests:
        memory: "512Mi"

# Global configuration. This can be overriden by a parent chart.
global:
  database:
    mongodb:
      host: mongodb
      port: 27017
      database: boomerang
      args:
      user: boomerang
      password: passw0rd
      secretName: mongodb
      secretKey: mongodb-password
      tlsSecretName:
  ingress:
    enabled: false
    root: /flow
    host: host.example.io
    tlsSecretName: bmrg-tls-cloud
    # The prefix for the annotations inside the ingress definition.
    annotationsPrefix: "nginx.ingress.kubernetes.io"
    # The class of the ingress, it is used to mark the ingress resources to be picked-up by a specific
    # controller.
    class: "nginx"
    # Enable appRoot if you wish the 'app-root' i.e. '/' ingress annotation to redirect to the flow app
    enableAppRoot: false
    # Allowance for extra custom ingress annotations
    annotations: {}
  auth:
    enabled: false
    mode: basic
    serviceName: bmrg-auth-proxy
    namespace: bmrg-core
    prefix: /oauth
    tokenURL: http://bmrg-core-services-auth.bmrg-core.svc.cluster.local/auth/token/validate/external
    signOutRedirect:

hostAliases: []

proxy:
  enable: false
  host:
  port:

monitoring:
  instana:
    enable: false
    browser:
      reportingUrl:
      key:
  jaeger:
    enabled: false
    namespace:
    agent:
      host: jaeger-dev-agent
      port: 6831
    collector:
      host: jaeger-dev-collector
      port: 14268
    remoteControlledSampler:
      host: jaeger-dev-agent
      port: 5778

# Eventing related values
eventing:
  enabled: false
  sinkUrls: 

oauth2proxy:
  enabled: true
  fullnameOverride: flow-auth-proxy
  extraArgs:
    custom-templates-dir: /custom/templates
    cookie-path: /dev
    cookie-secure: "true"
    proxy-prefix: /dev/oauth
    redirect-url: /dev/oauth/callback
    skip-provider-button: "false"
    upstream: file:///dev/null
    http-address: 0.0.0.0:4180
    # Uncomment if basic auth is enabled
    # basic-auth-password: $(UPSTREAM_AUTH_PASSWORD)
    # pass-basic-auth: "true"
    # set-basic-auth: "true"
  # Uncomment if basic auth is enabled and remove empty array
  extraEnv: []
  #- name: UPSTREAM_AUTH_PASSWORD
  #  value: coronet-cottage-nave-idiom-resume
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/client-body-buffer-size: 12M
      nginx.ingress.kubernetes.io/client-max-body-size: 12M
      nginx.ingress.kubernetes.io/configuration-snippet: |
        proxy_pass_request_body     on;
        proxy_cache                   authentication;
        proxy_cache_key               $cookie_flow_app_dev;
        proxy_cache_valid             202 401 3s;
        proxy_cache_lock              on;
        proxy_ignore_headers          Set-Cookie;
      nginx.ingress.kubernetes.io/proxy-body-size: 8M
      nginx.ingress.kubernetes.io/proxy-buffer-size: 12M
      nginx.ingress.kubernetes.io/proxy-buffering: "on"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    enabled: true
    hosts:
    - app.useboomerang.io
    path: /dev/oauth
    pathType: ImplementationSpecific
    tls:
    - hosts:
      - app.useboomerang.io
  htpasswdFile:
    enabled: true
    entries:
    - admin@useboomerang.io:$2y$05$SvuX7bfuQfAk0M4Q0nmZMO8pSrY7s8.i8dTH4WU9PcTqY89pjC71m
    existingSecret: ""
  extraVolumes:
    - name: custom-templates
      configMap:
      # Value of fullNameOverride + '-templates'
        name: flow-auth-proxy-templates
  extraVolumeMounts:
    - name: custom-templates
      mountPath: /custom/templates

extraConfig:
  # services: |
  #   server.max-http-header-size=64000
  #   server.tomcat.max-http-header-size=65536
  #   server.tomcat.max-http-post-size=2097152